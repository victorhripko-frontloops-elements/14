!function(){function r(r){return function(r){if(Array.isArray(r))return t(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,e){if(!r)return;if("string"==typeof r)return t(r,e);var n=Object.prototype.toString.call(r).slice(8,-1);"Object"===n&&r.constructor&&(n=r.constructor.name);if("Map"===n||"Set"===n)return Array.from(r);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return t(r,e)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}var e,n,o,i;e=document.querySelector(".form"),n=e.querySelectorAll(".form__input"),o=e.querySelector('[name="password"]'),i=e.querySelector('[name="confirm_password"]'),e.addEventListener("submit",(function(t){var e,a,u,c;t.preventDefault(),e=o.value,a=i.value,u=e&&a!==e,c=!r(n).find((function(r){return!1===r.validity.valid}))&&!u,n.forEach((function(r){r.classList.toggle("is-invalid",!r.checkValidity())})),i.classList.toggle("is-invalid",u),c&&alert("Success! ðŸ˜Ž")}))}();